{"name":"wm-html-include.js","tagline":"Pleasures of HTML include while W3C HTML Import was still a draft","body":"# How the problem arose\r\n\r\nOne customer asked me for some additions to his Web page.  \r\nIt had to be small, compact HTML insertions, with their own styles and behavior and interaction with the rest of the page (some event handling and data exchange).  \r\nAt the same time, the customer would be able to change styles of these \"widgets\" along with the main theme of the page, and to change/add some interaction in the future.  \r\nHow could I do this?  \r\nIFrame based solution is heavyweight and associated with surplus difficulties to overcome the \"impermeability\".  \r\nWeb components are not supported yet everywhere, and it's too \"unusual\" for my customer.  \r\nAnd *...drumroll...*  \r\nthe **Solution** was found!\r\n\r\n\r\n# wm-html-include.js\r\n\r\nis a small *script* to include external HTML page(s) into comprising HTML page.  \r\nA part of  [Wamer project](http://www.wamer.net/)\r\n\r\n\r\n## When to use it\r\n\r\nIf you need to compose a Web page on client-side, but either iframes or [HTML Imports]( http://www.w3.org/TR/2013/WD-html-imports-20130514) are not suitable to the case.  \r\nOne most likely may need it to:  \r\nquickly sew Web page from some existing or newly developed small parts (components);  \r\npatch existing Web page not changing significantly its content.\r\n\r\n\r\n## How to use it\r\n\r\n### Static links\r\n\r\n```html\r\n<!-- Any tag with reference to another HTML, may be another... -->\r\n<div data-wi-src=\"http://another.domain/component-1.html\"> </div>\r\n<!-- ... -->\r\n<!-- ... or the same domain -->\r\n<span data-wi-src=\"component-2.html\"> </span>\r\n<!-- ... -->\r\n<!-- It may even looks almost like W3C \"import\" -->\r\n<link data-wi-src=\"component-3.html\" />\r\n<!-- ... -->\r\n<!-- Somewhere below -->\r\n<script src=\"wm-html-include.js\"> </script>\r\n```\r\n\r\n*The script* includes all the pages referenced by **data-wi-src** attribute into the comprising HTML page.  \r\n**Note!**: *the script* entirely removes the target element replacing it with referenced content.\r\nSo if you need any additional styles for included part you should wrap target with some container.\r\nExample:\r\n\r\n```html\r\n<div style=\"width: 300px; height: 200px; background: silver;\">\r\n    <link data-wi-src=\"component.html\" />\r\n</div>\r\n```\r\n\r\n### Dynamic links\r\n\r\nUse ***wmHtmlInclude()*** function of *the script* interface.\r\n\r\n```html\r\n<div id=\"place-here\">\r\n</div>\r\n<!-- ... -->\r\n<script src=\"wm-html-include.js\"> </script>\r\n<script>\r\n    var link = document.createElement ('link');\r\n    link.setAttribute ('data-wi-src', 'new-component.html');\r\n    document.getElementById ('place-here').appendChild (link);\r\n\r\n    // now do the thing\r\n    window.wmHtmlInclude();\r\n</script>\r\n```\r\n\r\n\r\n## How it works\r\n\r\n*The script* finds all the tags with **data-wi-src** attribute.  \r\nThen, for each such tag it gets the referred HTML page,  \r\nmerges all it's *style, link[rel=\"stylesheet\"]* to the target page,  \r\nreplaces target element with source's *body*,  \r\nloads and runs source's *script* elements.  \r\n  \r\nIt circumvents the same-origin restrictions by [YQL](https://developer.yahoo.com/yql/)\r\nand works with any [CORS enabled browser](http://caniuse.com/#feat=cors).\r\n  \r\nThere are a few cases when the *css* or *script* is NOT loaded from the include:\r\n 1. *link* or *script* with *src* attribute. *The script* checks if corresponding\r\n resource with the same *url* value already exists in the target document. In this case the resource\r\n is not loaded;\r\n 2. You can define the loading condition explicitly by *data-wi-loadchk* attribute in included resources\r\n   \r\n\r\n```html\r\n<link href=\"https://code.jquery.com/ui/1.11.2/themes/redmond/jquery-ui.min.css\" rel=\"stylesheet\"\r\n        data-wi-loadchk=\"jQuery.ui\" />\r\n<link href=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n        data-wi-loadchk=\"jQuery.fn.scrollspy.noConflict\" />\r\n<!-- ... -->\r\n<script src=\"https://code.jquery.com/ui/1.11.2/jquery-ui.min.js\"\r\n        data-wi-loadchk=\"jQuery.ui\">\r\n</script>\r\n<script src=\"http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js\"\r\n        data-wi-loadchk=\"jQuery.fn.scrollspy.noConflict\">\r\n</script>\r\n```\r\n   \r\n*The script* evaluates the condition pointed out by *data-wi-loadchk* and does NOT load\r\n the resource if the condition is *true*.    \r\n In the example above, the *jQuery.ui* and *Bootstrap* libraries are checked to prevent the second loading.\r\n\r\n## Some restrictions (not arduous)\r\n\r\nIn order to properly display the page, and due to the loading and processing strategy, it's required that included pages\r\n* have *head* and *body* tags;\r\n* are (X)HTML compliant ([what it means?](https://github.com/al-scvorets/wm-html-include.js/wiki/%28X%29HTML-compliance-in-short)).\r\n\r\n## More restrictions (significant)\r\n\r\nDon't even try insecure (HTTP) includes on secure (HTTPS) page.  \r\nNormally, browser will block that.  \r\nAnd it will be right.\r\n\r\n## Examples\r\n* [Combine dialog panel with jQuery UI Button, jQuery UI menubar plugin and Bootstrap carousel, each in separate HTML file, into one target page](http://wamer.net/examples/wm-html-include/1/index.html)\r\n\r\n\r\n## License\r\n[MIT License](http://opensource.org/licenses/MIT)\r\n\r\n\r\n## Alternatives\r\n* [html-imports-content](https://github.com/adjohnson916/html-imports-content)\r\n* [Matthew-Dove/Inject](https://github.com/Matthew-Dove/Inject)\r\n","google":"UA-62159731-1","note":"Don't delete this file! It's used internally to help with page regeneration."}